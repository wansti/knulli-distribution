// SPDX-License-Identifier: (GPL-2.0+ OR MIT)

/dts-v1/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/linux-event-codes.h>
#include <dt-bindings/pinctrl/rockchip.h>
#include "rk3566-powkiddy-rk2023.dtsi"

/ {
	model = "RGB30";
	compatible = "powkiddy,rgb30", "rockchip,rk3566";

	/delete-node/ gpio-keys-control;

	joypad: singleadc-joypad {
		compatible = "singleadc-joypad";
		hw_info = <0x01>;

		joypad-name = "retrogame_joypad";
		joypad-product = <0x1101>;
		joypad-revision = <0x0100>;

		status = "okay";

		/* gpio pincontrol setup */
		pinctrl-names = "default";
		pinctrl-0 = <&btn_pins_ctrl>;

		/* Analog mux define */
		io-channel-names = "amux_adc";
		io-channels = <&saradc 3>;

		/* adc mux channel count */
		amux-count = <4>;
		/* adc mux select(a,b) gpio */
		amux-a-gpios = <&gpio0 RK_PB6 GPIO_ACTIVE_LOW>;
		amux-b-gpios = <&gpio0 RK_PB7 GPIO_ACTIVE_LOW>;
		/* adc mux enable gpio */
		amux-en-gpios = <&gpio0 RK_PB5 GPIO_ACTIVE_LOW>;

		/* adc calculate scale */
		button-adc-scale = <2>;


		/* adc deadzone range  */
		button-adc-deadzone = <64>;

		/*
		  specifies fuzz value that is used to filter noise from
		  the event stream.
		*/
		button-adc-fuzz = <32>;
		button-adc-flat = <32>;

		/*
		  Analog Stick data tuning value(precent)
		  p = positive direction, n = negative direction
		  report value = (real_adc_data * tuning_value) / 100
		*/
		abs_x-p-tuning = <245>;
		abs_x-n-tuning = <245>;

		abs_y-p-tuning = <245>;
		abs_y-n-tuning = <245>;

		abs_rx-p-tuning = <245>;
		abs_rx-n-tuning = <245>;

		abs_ry-p-tuning = <245>;
		abs_ry-n-tuning = <245>;

		/* poll device interval (ms), adc read interval */
		poll-interval = <10>;

		/* gpio button auto repeat set value : default disable */
		/*
			autorepeat;
		*/
		sw1 {
		        gpios = <&gpio3 RK_PA3 GPIO_ACTIVE_LOW>;
		        label = "GPIO DPAD-UP";
		        linux,code = <BTN_DPAD_UP>;
		};
		sw2 {
		        gpios = <&gpio3 RK_PA4 GPIO_ACTIVE_LOW>;
		        label = "GPIO DPAD-DOWN";
		        linux,code = <BTN_DPAD_DOWN>;
		};
		sw3 {
		        gpios = <&gpio3 RK_PA6 GPIO_ACTIVE_LOW>;
		        label = "GPIO DPAD-LEFT";
		        linux,code = <BTN_DPAD_LEFT>;
		};
		sw4 {
		        gpios = <&gpio3 RK_PA5 GPIO_ACTIVE_LOW>;
		        label = "GPIO DPAD-RIGHT";
		        linux,code = <BTN_DPAD_RIGHT>;
		};
		sw5 {
		        gpios = <&gpio3 RK_PC3 GPIO_ACTIVE_LOW>;
		        label = "GPIO KEY BTN-A";
		        linux,code = <BTN_SOUTH>;
		};
		sw6 {
		        gpios = <&gpio3 RK_PC2 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN-B";
		        linux,code = <BTN_EAST>;
		};
		sw7 {
		        gpios = <&gpio3 RK_PC0 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN-X";
		        linux,code = <BTN_NORTH>;
		};
		sw8 {
		        gpios = <&gpio3 RK_PC1 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN-Y";
		        linux,code = <BTN_WEST>;
		};
		sw9 {
		        gpios = <&gpio3 RK_PB6 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_SELECT";
		        linux,code = <BTN_SELECT>;
		};
		sw10 {
		        gpios = <&gpio3 RK_PB5 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_START";
		        linux,code = <BTN_START>;
		};
		sw11 {
		        gpios = <&gpio3 RK_PB7 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_F";
		        linux,code = <BTN_MODE>;
		};
		sw12 {
		        gpios = <&gpio3 RK_PB1 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_TL";
		        linux,code = <BTN_TL>;
		};
		sw13 {
		        gpios = <&gpio3 RK_PB3 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_TR";
		        linux,code = <BTN_TR>;
		};
		sw14 {
		        gpios = <&gpio3 RK_PB2 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_TL2";
		        linux,code = <BTN_TL2>;
		};
		sw15 {
		        gpios = <&gpio3 RK_PB4 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_TR2";
		        linux,code = <BTN_TR2>;
		};
		sw16 {
		        gpios = <&gpio3 RK_PA1 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_THUMBL";
		        linux,code = <BTN_THUMBL>;
		};
		sw17 {
		        gpios = <&gpio3 RK_PA2 GPIO_ACTIVE_LOW>;
		        label = "GPIO BTN_THUMBR";
		        linux,code = <BTN_THUMBR>;
		};
	
    	};

};

&cru {
	assigned-clocks = <&pmucru CLK_RTC_32K>, <&cru PLL_GPLL>,
			  <&pmucru PLL_PPLL>, <&cru PLL_VPLL>;
	assigned-clock-rates = <32768>, <1200000000>,
			       <200000000>, <292500000>;
};

&dsi0 {
	panel: panel@0 {
		compatible = "powkiddy,rgb30-panel";
		reg = <0>;
		backlight = <&backlight>;
		pinctrl-names = "default";
		pinctrl-0 = <&lcd_rst>;
		reset-gpios = <&gpio4 RK_PA0 GPIO_ACTIVE_LOW>;
		vcc-supply = <&vcc3v3_lcd0_n>;
		iovcc-supply = <&vcc3v3_lcd0_n>;

		port {
			mipi_in_panel: endpoint {
				remote-endpoint = <&mipi_out_panel>;
			};
		};
	};
};

&i2c0 {
	vdd_cpu: regulator@1c {
		compatible = "tcs,tcs4525";
		reg = <0x1c>;
		fcs,suspend-voltage-selector = <1>;
		regulator-always-on;
		regulator-boot-on;
		regulator-min-microvolt = <712500>;
		regulator-max-microvolt = <1390000>;
		regulator-name = "vdd_cpu";
		regulator-ramp-delay = <2300>;
		vin-supply = <&vcc_sys>;
		regulator-state-mem {
			regulator-off-in-suspend;
		};
	};
};

